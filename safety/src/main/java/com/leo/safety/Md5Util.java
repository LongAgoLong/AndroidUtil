package com.leo.safety;import com.leo.safety.enume.Md5Mode;import java.security.MessageDigest;/** * @author Ari * MD5加密工具 */public final class Md5Util {    private final static String[] hexDigits = {"0", "1", "2", "3", "4", "5",            "6", "7", "8", "9", "a", "b", "c", "d", "e", "f"};    public static String byteArrayToHexString(byte[] b) {        StringBuffer resultSb = new StringBuffer();        for (int i = 0; i < b.length; i++) {            resultSb.append(byteToHexString(b[i]));        }        return resultSb.toString();    }    private static String byteToHexString(byte b) {        int n = b;        if (n < 0)            n = 256 + n;        int d1 = n / 16;        int d2 = n % 16;        return hexDigits[d1] + hexDigits[d2];    }    public static String encode(String origin) {        return encode(origin, Md5Mode.LOWERCASE);    }    public static String encode(String origin, @Md5Mode int mode) {        try {            MessageDigest md = MessageDigest.getInstance("MD5");            String resultString = byteArrayToHexString(md.digest(origin.getBytes()));            if (mode == Md5Mode.UPPERCASE) {                return resultString.toUpperCase();            } else {                return resultString;            }        } catch (Exception ex) {            ex.printStackTrace();        }        return origin;    }}